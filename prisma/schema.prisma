generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model University {
  id          String       @id
  name        String
  shortName   String
  departments Department[]

  @@map("universities")
}

model Department {
  id           String     @id
  name         String
  subjects     Subject[]
  university   University @relation(fields: [universityId], references: [id])
  universityId String

  @@map("departments")
}

model Subject {
  id             String                 @id
  instituteId    String
  name           String
  language       String
  level          String
  studyPoints    Float
  courseContent  String?
  learningGoals  String?
  learningForm   String?
  studyLevel     Int?
  placeOfStudy   String?
  taughtInSpring Boolean?
  taughtInAutumn Boolean?
  department     Department             @relation(fields: [instituteId], references: [id])
  grades         SubjectSemesterGrade[]
  aliases        Alias[]
  favorites      Favorite[]
  reviews        Review[]

  @@map("subjects")
}

model SubjectSemesterGrade {
  id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subjectId         String
  year              Int
  semester          Int
  gradeA            Int?
  gradeB            Int?
  gradeC            Int?
  gradeD            Int?
  gradeE            Int?
  gradeF            Int?
  gradePass         Int?
  gradeFail         Int?
  participantsTotal Int
  subject           Subject @relation(fields: [subjectId], references: [id])

  @@map("subject_semester_grades")
}

model User {
  id        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String     @unique
  password  String
  favorites Favorite[]
  reviews   Review[]

  @@map("users")
}

model Alias {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subjectId String
  alias     String
  subject   Subject @relation(fields: [subjectId], references: [id])

  @@map("aliases")
}

model Favorite {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String  @db.Uuid
  subjectId String
  user      User    @relation(fields: [userId], references: [id])
  subject   Subject @relation(fields: [subjectId], references: [id])

  @@map("favorites")
}

model Review {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId         String   @db.Uuid
  subjectId      String
  message        String
  submissionDate DateTime @default(now())
  user           User     @relation(fields: [userId], references: [id])
  subject        Subject  @relation(fields: [subjectId], references: [id])

  @@map("reviews")
}
